lm
42/83
c(7,68,69,71,73)
mapstyle = c(
"element:labels|visibility:off",
"style=feature:administrative.province|element:geometry.stroke|color:0x0000"
)
map <- get_googlemap(center = 'Taiwan', zoom = 7,
style = paste(mapstyle,collapse="&"))
library(dplyr)
library(ggplot2)
library(ggmap)
mapstyle = c(
"element:labels|visibility:off",
"style=feature:administrative.province|element:geometry.stroke|color:0x0000"
)
map <- get_googlemap(center = 'Taiwan', zoom = 7,
style = paste(mapstyle,collapse="&"))
ggmap(map)
mapstyle = c(
"feature:administrative.province|element:geometry.stroke|color:0x0000"
)
map <- get_googlemap(center = 'Taiwan', zoom = 7,
style = paste(mapstyle,collapse="&"))
ggmap(map)
mapstyle = c(
"feature:administrative.locality|element:geometry.stroke|color:0x0000"
)
map <- get_googlemap(center = 'Taiwan', zoom = 7,
style = paste(mapstyle,collapse="&"))
ggmap(map)
map <- get_googlemap(center = 'Taiwan', zoom = 7)
ggmap(map)
mapstyle = c(
"feature:administrative.locality|element:geometry.stroke|color:0x000000"
)
map <- get_googlemap(center = 'Taiwan', zoom = 7,
style = paste(mapstyle,collapse="&"))
ggmap(map)
15*200
10*150
150*20
63000/22
50000/22
50000/21
63000/21
plot(1:10,xlab=expression(x^2))
x = iris
x = iris[[5]]
x
levels(x) = c("versicolor","b","virginica")
x
?scale_colour_brewer
library(ggplot2)
?scale_colour_brewer
g <- brewer_pal(type="seq", palette="Set1")
library(scales)
g <- brewer_pal(type="seq", palette="Set1")
g(7)
g(6)
library(dplyr)
?mutate_each_
?ggplot
library(ggplot2)
?ggplot
?geom_point
library(GGally)
?ggpairs
?geom_histogram
?geom_line
lvr = read.csv("C:/GitHub/2017SHU/20171016/20171016_files/A_LVR_LAND_A.csv")
lvr$交易年月日
order(lvr$交易年月日)
rank(lvr$交易年月日)
class(lvr$交易年月日)
ggplot(lvr, aes(x=交易年月日, y=單價每平方公尺))+
geom_line()
?rank
?geom_bar
ggplot(lvr, aes(x="", fill=主要用途)) +
geom_bar()
ggplot(lvr, aes(x="", fill=主要用途)) +
geom_bar() +
facet_grid(. ~ 有無管理組織)
knitr::opts_chunk$set(echo = TRUE)
ggplot(lvr, aes(x="", fill=都市土地使用分區)) +
geom_bar() +
facet_grid(. ~ 有無管理組織)
ggplot(lvr, aes(x="", fill=都市土地使用分區)) +
geom_bar() +
facet_grid(. ~ 有無管理組織)
ggplot(lvr, aes(x="", fill=有無管理組織)) +
geom_bar() +
facet_grid(. ~ 建物現況格局.隔間)
ggplot(lvr, aes(x="", y=Summary,fill=有無管理組織)) +
geom_bar() +
facet_grid(. ~ 建物現況格局.隔間)
ggplot(lvr, aes(x=factor(1), y=Summary,fill=有無管理組織)) +
geom_bar() +
facet_grid(. ~ 建物現況格局.隔間)
ggplot(lvr, aes(x=單價每平方公尺, y=鄉鎮市區)) +
stat_boxplot()
ggplot(lvr, aes(x=單價每平方公尺, y=鄉鎮市區)) +
geom_boxplot()
ggplot(lvr, aes(x=單價每平方公尺, y=鄉鎮市區)) +
geom_boxplot()
ggplot(lvr, aes(x=鄉鎮市區, y=單價每平方公尺)) +
geom_boxplot()
?facet_grid
ggplot(lvr, aes(x=鄉鎮市區, y=單價每平方公尺)) +
geom_jitter(col="orange") +
facet_grid(有無管理組織 ~) +
stat_boxplot(fill="#4286f4") +
coord_flip() +
theme_light()
ggplot(lvr, aes(x=鄉鎮市區, y=單價每平方公尺)) +
geom_jitter(col="orange") +
facet_grid(有無管理組織 ~) +
stat_boxplot() +
coord_flip() +
theme_light()
ggplot(lvr, aes(x=鄉鎮市區, y=單價每平方公尺)) +
geom_jitter(col="orange") +
facet_grid(有無管理組織 ~ .) +
stat_boxplot() +
coord_flip() +
theme_light()
ggplot(lvr, aes(x=鄉鎮市區, y=單價每平方公尺)) +
geom_jitter(col="orange") +
facet_grid(有無管理組織 ~ .) +
stat_boxplot(fill="#4286f4") +
coord_flip() +
theme_light()
ggplot(data=lvr, aes(x=建物移轉總面積平方公尺, y=總價元)) +
geom_point(size=2, shape=2)
ggplot(data=lvr, aes(x=建物移轉總面積平方公尺, y=總價元)) +
geom_point(size=4, shape=3)
ggplot(data=lvr, aes(x=建物移轉總面積平方公尺, y=總價元)) +
geom_point(size=1, shape=3)
?geom_line
ggplot(lvr, aes(x=rank(交易年月日, ties.method="random"), y=單價每平方公尺))+
geom_line(linetype=2)
ggplot(lvr, aes(x=rank(交易年月日, ties.method="random"), y=單價每平方公尺))+
geom_line(size=2, linetype=2)
?labs
setwd("C:\\GitHub\\2017SHU\\20171016")
library(dplyr)
library(ggplot2)
tw = readRDS("20171016_files/TWN_adm2.rds")
lvr = read.csv("20171016_files/A_LVR_LAND_A.csv", fileEncoding="BIG5")
head(tw)
summary(tw)
tw$NAME_1
tw %>% filter(NAME_1 == "Taipei")
tw$NAME_0
tw$NAME_2
tw[tw$NAME_1 =="Taipei",]
xx=tw[tw$NAME_1 =="Taipei",]
names(xx)
xx$NAME_1
tw$ID_0
tw$ISO
tw$ID_1
tw$ID_2
tw$VARNAME_2
tw$NL_NAME_2
tw$ENGTYPE_2
tw$CCA_2
tw$CCN_2
tw$HASC_2
tw@data
tw@bbox
methods(tw)
dim(tw)
dim(xx)
ggplot() +
geom_polygon(data = tw)
ggplot() +
geom_polygon(data = tw) +
aes(x = long, y = lat)
ggplot() +
geom_polygon(data = tw) +
aes(x = long, y = lat) +
coord_map()
?fortify
class(tw)
tw2 = fortify(tw, region = "COUNTYCODE")
install.packages("maptools")
tw2 = fortify(tw, region = "COUNTYCODE")
ggplot() +
geom_polygon(aes(x=long, y=lat), data=tw,colour='grey',fill='white',alpha=.5,size=.5)
ggplot() +
geom_polygon(aes(x=long, y=lat), data=xx,colour='grey',fill='white',alpha=.5,size=.5)
ggmap() +
geom_polygon(aes(x=long, y=lat), data=xx,colour='grey',fill='white',alpha=.5,size=.5)
library(ggmap)
ggmap() +
geom_polygon(aes(x=long, y=lat), data=xx,colour='grey',fill='white',alpha=.5,size=.5)
tw = readShapeSpatial("20171016_files/TOWN_MOI_1060831.shp")
library(sp)
tw = readShapeSpatial("20171016_files/TOWN_MOI_1060831.shp")
??readShapeSpatial
library(maptools)
tw = readShapeSpatial("20171016_files/TOWN_MOI_1060831.shp")
?readShapeSpatial
readOGR
library(rgdal)
install.packages("rgdal")
library(rgdal)
tpn = readOGR("Taipei","20171016_files/TOWN_MOI_1060831.shp") %>% spTransform(CRS("+proj=longlat +datum=WGS84"))
?readOGR
tpn = readOGR("20171016_files/TOWN_MOI_1060831.shp") %>% spTransform(CRS("+proj=longlat +datum=WGS84"))
tw = readShapePoly("20171016_files/TOWN_MOI_1060831.shp")
tpn = readOGR("20171016_files","TOWN_MOI_1060831.shp") %>% spTransform(CRS("+proj=longlat +datum=WGS84"))
crswgs84=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
tw = readShapePoly("20171016_files/TOWN_MOI_1060831.shp",proj4string=crswgs84)
?readShapePoly
tpn = readOGR("20171016_files","TOWN_MOI_1060831") %>% spTransform(CRS("+proj=longlat +datum=WGS84"))
tpn = readOGR(".","TOWN_MOI_1060831") %>% spTransform(CRS("+proj=longlat +datum=WGS84"))
tpn = readOGR("TOWN_MOI_1060831","TOWN_MOI_1060831") %>% spTransform(CRS("+proj=longlat +datum=WGS84"))
tpn = readOGR("TOWN_MOI_1060831.shp","TOWN_MOI_1060831") %>% spTransform(CRS("+proj=longlat +datum=WGS84"))
tpn = readOGR("./TOWN_MOI_1060831.shp","TOWN_MOI_1060831") %>% spTransform(CRS("+proj=longlat +datum=WGS84"))
getwd()
tpn = readOGR(".","TOWN_MOI_1060831.shp") %>% spTransform(CRS("+proj=longlat +datum=WGS84"))
tpn = readOGR("./","TOWN_MOI_1060831.shp") %>% spTransform(CRS("+proj=longlat +datum=WGS84"))
tpn = readOGR("tw","TW-07-301000100G-614001") %>% spTransform(CRS("+proj=longlat +datum=WGS84"))
tpn = readOGR("tw","TOWN_MOI_1060831") %>% spTransform(CRS("+proj=longlat +datum=WGS84"))
tpn
summary(tpn)
tpn$COUNTYCODE
tpn$COUNTYNAME
tpn$TOWNID
tpn$TOWNCODE
tpn$TOWNENG
plot(tpn)
tpn$TOWNCODE
tpn$TOWNID
xx = tpn %>%
filter(TOWNID == "V02")
xx = subset(TOWNID == "V02")
xx = subset(tpn, TOWNID == "V02")
plot(xx)
xx = subset(tpn, grepl("^A",TOWNID))
plot(xx)
xx
ggplot(xx) +
geom_polygon(aes(x=long, y=lat),colour='grey',fill='white',alpha=.5,size=.5)
yy = fortify(xx)
ggplot(yy) +
geom_polygon(aes(x=long, y=lat),colour='grey',fill='white',alpha=.5,size=.5)
yy = fortify(xx, region = "COUNTYCODE")
xx$COUNTYCODE
ggplot(xx) +
geom_polygon(aes(x=long, y=lat),colour='grey',fill='white',alpha=.5,size=.5)+
coord_map()
ggplot(xx) +
geom_polygon(aes(x=long, y=lat),group = group,colour='grey',fill='white',alpha=.5,size=.5)+
coord_map()
xx$TOWNID
ggplot(xx) +
geom_polygon(aes(x=long, y=lat),group = TOWNID,colour='grey',fill='white',alpha=.5,size=.5)+
coord_map()
ggplot(xx) +
geom_polygon(aes(x=long, y=lat,group = TOWNID),colour='grey',fill='white',alpha=.5,size=.5)+
coord_map()
xx$TOWNCODE
ggplot(xx) +
geom_polygon(aes(x=long, y=lat),group = xx$TOWNID,colour='grey',fill='white',alpha=.5,size=.5)+
coord_map()
yy = fortify(xx, region = "COUNTYCODE")
yy = fortify(xx, region = "TOWNCODE")
yy = fortify(xx)
ggplot(yy) +
geom_polygon(aes(x=long, y=lat),group = group,colour='grey',fill='white',alpha=.5,size=.5)+
coord_map()
ggplot(yy) +
geom_polygon(aes(x=long, y=lat,group = group),colour='grey',fill='white',alpha=.5,size=.5)+
coord_map()
class(yy)
View(yy)
?fortify
xx$TOWNNAME
ggplot(yy) +
geom_polygon(aes(x=long, y=lat,group = group),colour='grey',fill='white',alpha=.5,size=.5)
write.csv(yy, "tpn.csv", row.names = F)
library(ggmap)
?get_map
map = get_map(location = "北投區", zoom = 12)
map = get_map(location = "Taipei", zoom = 12)
map = get_googlemap(center = 'Taipei', zoom = 12)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=yy,colour='grey',fill='white',alpha=.5,size=.5)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=yy,colour='grey',fill='blue',alpha=.5,size=.5)
map = get_googlemap(center = 'Taipei', zoom = 10)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=yy,colour='grey',fill='blue',alpha=.5,size=.5)
map = get_googlemap(center = 'Taipei', zoom = 11)
map = get_googlemap(center = 'Taipei', zoom = 11)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=yy,colour='grey',fill='blue',alpha=.5,size=.5)
head(yy)
table(yy$order)
table(yy$hole)
table(yy$piece)
table(yy$group)
table(yy$id)
head(yy)
head(xx)
xx$TOWNID
xx$TOWNCODE
yy = fortify(xx, region = "TOWNCODE")
yy = fortify(xx, region = xx$TOWNCODE)
xx = droplevels(xx)
head(yy)
xx$TOWNID
xx$COUNTYCODE
View(yy)
xx$TOWNID
View(yy)
table(yy$id)
yy = yy %>%
mutate(location=recode(id,
`161` = "大安區",
`162` = "文山區",
`355` = "信義區",
`356` = "萬華區",
`357` = "中正區",
`358` = "南港區",
`359` = "松山區",
`360` = "大同區",
`361` = "中山區",
`362` = "士林區",
`363` = "北投區",
`367` = "內湖區"))
zz = yy %>%
filter(id==161)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=z,colour='grey',fill='blue',alpha=.5,size=.5)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=zz,colour='grey',fill='blue',alpha=.5,size=.5)
zz = yy %>%
filter(id==162)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=zz,colour='grey',fill='blue',alpha=.5,size=.5)
zz = yy %>%
filter(id==355)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=zz,colour='grey',fill='blue',alpha=.5,size=.5)
zz = yy %>%
filter(id==356)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=zz,colour='grey',fill='blue',alpha=.5,size=.5)
zz = yy %>%
filter(id==357)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=zz,colour='grey',fill='blue',alpha=.5,size=.5)
zz = yy %>%
filter(id==358)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=zz,colour='grey',fill='blue',alpha=.5,size=.5)
zz = yy %>%
filter(id==359)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=zz,colour='grey',fill='blue',alpha=.5,size=.5)
zz = yy %>%
filter(id==360)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=zz,colour='grey',fill='blue',alpha=.5,size=.5)
zz = yy %>%
filter(id==361)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=zz,colour='grey',fill='blue',alpha=.5,size=.5)
zz = yy %>%
filter(id==362)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=zz,colour='grey',fill='blue',alpha=.5,size=.5)
zz = yy %>%
filter(id==363)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group = group),
data=zz,colour='grey',fill='blue',alpha=.5,size=.5)
yy = yy %>%
select(long, lat, location)
write.csv(yy,"tpn.csv",row.names = F)
lvr = read.csv("20171016_files/A_LVR_LAND_A.csv")
View(lvr)
tapply(lvr$單價每平方公尺, lvr$鄉鎮市區, mean)
tapply(lvr$單價每平方公尺, lvr$鄉鎮市區, mean, na.rm=T)
xx = tapply(lvr$單價每平方公尺, lvr$鄉鎮市區, mean, na.rm=T)
as.data.frame(xx)
xxx=as.data.frame(xx)
names(xxx)
xxx$xx
xxx=data.frame(鄉鎮市區=names(xx), 單價每平方公尺=xx)
xxx
zz = merge(yy, xxx)
View(zz)
yy = read.csv("tpn.csv")
zz = merge(yy, xxx)
View(zz)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group=group,fill=單價每平方公尺),
data=zz,alpha=.5)
View(zz)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group=鄉鎮市區,fill=單價每平方公尺),
data=zz,alpha=.5)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group=鄉鎮市區,fill=單價每平方公尺),
data=zz,alpha=.75)
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group=鄉鎮市區,fill=單價每平方公尺),
data=zz,alpha=.75,colour="yellow")
ggmap(map) +
geom_polygon(aes(x=long, y=lat,group=鄉鎮市區,fill=單價每平方公尺),
data=zz,alpha=.75,colour="grey")
ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=鄉鎮市區, fill=單價每平方公尺),
data=zz, colour="grey", alpha=.75) +
scale_colour_gradient2()
ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=鄉鎮市區, fill=單價每平方公尺),
data=zz, colour="grey", alpha=.75) +
scale_fill_gradient2()
ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=鄉鎮市區, fill=單價每平方公尺),
data=zz, colour="grey", alpha=.75) +
scale_fill_gradient2(colours = terrain.colors(10))
?scale_fill_gradient2
ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=鄉鎮市區, fill=單價每平方公尺),
data=zz, colour="grey", alpha=.75) +
scale_fill_gradient(low = "green", high = "red")
ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=鄉鎮市區, fill=單價每平方公尺),
data=zz, colour="grey", alpha=.5) +
scale_fill_gradient(low="green", high="red")
